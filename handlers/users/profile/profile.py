from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import Command, Text
from aiogram.types import CallbackQuery
from aiogram.utils.markdown import hcode, hbold, hlink

from data.config import AMOUNT_TARIFF
from handlers.users.start.start import bot_start
from keyboards.inline.profile_keyboard.profile_keyboard import about_keyboard, settings_keyboard, add_seller_keyboard
from keyboards.inline.tarif_keyboard.tarif_keyboard import paid_keyboard
from loader import dp
from states import States
from utils.db_api.quick_commands.seller_inquiries import count_seller_by_user, select_seller_by_user
from utils.db_api.quick_commands.user_inquiries import select_user


@dp.message_handler(Command("my"), state='*')
async def show_about_user(message: types.Message, state: FSMContext):
    await message.delete()
    await state.finish()
    user_id = message.chat.id
    user = await select_user(user_id=user_id)
    count_sellers = await count_seller_by_user(user_id=user_id)
    await message.answer("\n".join(
        [
            f'ID: {hcode(user.id)}',
            f'–ü–æ—Å—Ç–∞–≤—â–∏–∫–∏: {count_sellers}',
        ]
    ), reply_markup=about_keyboard
    )


@dp.callback_query_handler(text="back_to_profile", state="*")
async def back_to_profile(call: CallbackQuery, state: FSMContext):
    await state.finish()
    user_id = call.message.chat.id
    user = await select_user(user_id=user_id)
    count_sellers = await count_seller_by_user(user_id=user_id)
    await call.message.edit_text("\n".join(
        [
            f'ID: {hcode(user.id)}',
            f'–ü–æ—Å—Ç–∞–≤—â–∏–∫–∏: {count_sellers}',
        ]
    ), reply_markup=about_keyboard
    )


@dp.callback_query_handler(Text(equals=["settings", "back_to_settings"]))
async def show_settings(call: CallbackQuery):
    user_id = call.message.chat.id
    list_sellers = await select_seller_by_user(user_id=user_id)
    await call.message.edit_text("\n".join(
        [
            f'üìù –í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–¥–∞–≤—Ü–∞ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:',
        ]
    ), reply_markup=settings_keyboard(list_sellers))


@dp.callback_query_handler(text="back_to_settings", state=States.CONNECTING_API)
async def back_to_choose_sellers(call: CallbackQuery, state: FSMContext):
    await state.finish()
    user_id = call.message.chat.id
    list_sellers = await select_seller_by_user(user_id=user_id)
    await call.message.edit_text("\n".join(
        [
            f'üìù –í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–¥–∞–≤—Ü–∞ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:',
        ]
    ), reply_markup=settings_keyboard(list_sellers))


@dp.callback_query_handler(text="add_seller")
async def add_seller(call: CallbackQuery):
    await call.message.edit_text("\n".join(
        [
            f'üë§ {hbold("–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–¥–∞–≤—Ü–∞")}\n',
            f'‚ÜîÔ∏è –ß—Ç–æ–±—ã –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –∑–∞–∫–∞–∑—ã —Å—Ä–∞–∑—É –¥–ª—è –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∫–∞–±–∏–Ω–µ—Ç–æ–≤ WB, –¥–æ–±–∞–≤—å—Ç–µ –µ—â–µ –æ–¥–∏–Ω API-–∫–ª—é—á.\n',
            f'1Ô∏è‚É£ –ó–∞–π–¥–∏—Ç–µ –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç Wildberries ‚Üí –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚Üí –î–æ—Å—Ç—É–ø –∫ API '
            f'({hlink("—Å—Å—ã–ª–∫–∞", "https://seller.wildberries.ru/supplier-settings/access-to-api")}).\n',
            f'2Ô∏è‚É£ –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∫–ª—é—á –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å {hbold("API —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ x64")} (–µ—Å–ª–∏ –∫–ª—é—á–∞ –Ω–µ—Ç, —Å–æ–∑–¥–∞–π—Ç–µ –µ–≥–æ –∏ –ø–æ—Ç–æ–º —Å–∫–æ–ø–∏—Ä—É–π—Ç–µ).\n',
            f'3Ô∏è‚É£ –í—Å—Ç–∞–≤—å—Ç–µ –∫–ª—é—á –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ —ç—Ç–æ–≥–æ —á–∞—Ç–∞.\n',
            f'üìù –í–≤–µ–¥–∏—Ç–µ API-–∫–ª—é—á –≤ —ç—Ç–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏:\n',
        ]
    ), reply_markup=add_seller_keyboard
    )
    await States.CONNECTING_API.set()


@dp.callback_query_handler(text="balance_and_paid")
async def balance_and_paid(call: CallbackQuery):
    user_id = call.message.chat.id
    user = await select_user(user_id=user_id)
    count_sellers = await count_seller_by_user(user_id=user_id)
    await call.message.edit_text(
        "\n".join(
            [
                hbold(f"üí∞ –ë–∞–ª–∞–Ω—Å: {user.balance}‚ÇΩ"),
                f'¬∑ –ü–æ—Å—Ç–∞–≤—â–∏–∫–∏: {hbold(count_sellers)}\n',
                f'üë®‚Äçüíºüë©üèª‚Äçüíº –ï—Å–ª–∏ –∫ –≤–∞—à–µ–º—É API-–∫–ª—é—á—É –ø–æ–¥–∫–ª—é—á–µ–Ω—ã –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤, —Ç–æ –æ–ø–ª–∞—á–∏–≤–∞–µ—Ç –∫—Ç–æ-—Ç–æ –æ–¥–∏–Ω, –ø–æ–ª—å–∑—É—é—Ç—Å—è –≤—Å–µ.\n',
                f'üîí –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø–æ –í–∞—à–µ–º—É —Å–æ–≥–ª–∞—Å–∏—é.\n',
                f'üõ° –î–µ–Ω—å–≥–∏ —Å –∫–∞—Ä—Ç—ã –≤ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–º —Ä–µ–∂–∏–º–µ –Ω–µ —Å–ø–∏—Å—ã–≤–∞—é—Ç—Å—è.\n',
                f'‚ÑπÔ∏è –û–ø–∏—Å–∞–Ω–∏–µ —Ç–∞—Ä–∏—Ñ–æ–≤ üëâüèª /tarif \n',

            ]
        ), reply_markup=paid_keyboard()
    )
