from aiogram import types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.markdown import hbold

from keyboards.inline.callback_datas import set_command_seller_id
from keyboards.inline.profile_keyboard.add_delete_seller import delete_seller_keyboard
from loader import dp
from utils.db_api.quick_commands.seller_inquiries import select_seller, delete_seller


@dp.callback_query_handler(set_command_seller_id.filter(command_name="delete_seller_keyboard"))
async def seller_settings(call: types.CallbackQuery, callback_data: dict):
    seller_id = callback_data.get("seller_id")
    seller = await select_seller(seller_id=int(seller_id))
    await call.message.edit_text("\n".join(
        [
            f'üóë {hbold("–£–¥–∞–ª–µ–Ω–∏–µ")}\n',
            f'–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã –∏–∑ –±–æ—Ç–∞ –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω –ø–æ—Å—Ç–∞–≤—â–∏–∫:',
            f'üë§ {seller.name}',
        ]
    ), reply_markup=delete_seller_keyboard(seller_id)
    )


@dp.callback_query_handler(set_command_seller_id.filter(command_name="delete_seller_confirm"))
async def seller_settings(call: types.CallbackQuery, callback_data: dict):
    seller_id = callback_data.get("seller_id")
    await delete_seller(seller_id=int(seller_id))
    back_keyboard = InlineKeyboardMarkup(row_width=1)
    back_button = InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_profile")
    back_keyboard.insert(back_button)
    await call.message.edit_text("\n".join(
        [
            f'üóë {hbold("–£–¥–∞–ª–µ–Ω–∏–µ")}\n',
            f'‚úÖ API-–∫–ª—é—á –∏ –ø–æ—Å—Ç–∞–≤—â–∏–∫ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω—ã',
        ]
    ), reply_markup=back_keyboard
    )
