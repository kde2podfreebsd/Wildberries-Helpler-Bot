import datetime

from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.types import CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.markdown import hbold, hlink

from data.config import BOT_NAME, SUPPORT_LINK
from keyboards.inline.start_keyboard.connection import connection_keyboard, back_to_connection
from loader import dp, bot
from states.states import States
from utils.db_api.quick_commands.seller_inquiries import select_seller_by_api_x64, add_seller, check_free_trail, \
    append_free_trail, update_trail_fail
from utils.db_api.quick_commands.user_inquiries import update_user_seller
from utils.misc.start_by_time import first_scan
from utils.wb_api.method_warehouse import valid_token


@dp.callback_query_handler(text="free_connection")
async def show_connection_menu(call: CallbackQuery):
    await bot.send_video(chat_id=call.message.chat.id, video=open('static/welcome_video.mp4', 'rb'))
    await call.message.answer(
        "\n".join(
            [
                f'üõ† {hbold("–ü–û–î–ö–õ–Æ–ß–ï–ù–ò–ï")}\n',
                f'1Ô∏è‚É£ –ó–∞–π–¥–∏—Ç–µ –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç Wildberries ‚Üí –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚Üí –î–æ—Å—Ç—É–ø –∫ API ',
                f'{hlink("—Å—Å—ã–ª–∫–∞", "https://seller.wildberries.ru/supplier-settings/access-to-api")}\n',
                f'2Ô∏è‚É£ –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∫–ª—é—á –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å {hbold("API —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ x64")}(–µ—Å–ª–∏ –∫–ª—é—á–∞ –Ω–µ—Ç, —Å–æ–∑–¥–∞–π—Ç–µ –µ–≥–æ –∏ –ø–æ—Ç–æ–º —Å–∫–æ–ø–∏—Ä—É–π—Ç–µ).\n',
                f'3Ô∏è‚É£ –í—Å—Ç–∞–≤—å—Ç–µ –∫–ª—é—á –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ —ç—Ç–æ–≥–æ —á–∞—Ç–∞.\n',

            ]
        ), reply_markup=connection_keyboard
    )
    await States.FREE_CONNECTING_API.set()


@dp.callback_query_handler(text="about_api", state=States.FREE_CONNECTING_API)
async def show_about_api(call: CallbackQuery):
    await call.message.edit_text(
        "\n".join(
            [
                f'‚öôÔ∏è {hbold("API-–∫–ª—é—á Wildberries")}\n',
                f'–ï—Å–ª–∏ –∫—Ä–∞—Ç–∫–æ, —Ç–æ ‚û°Ô∏è API-–∫–ª—é—á ‚Äî —ç—Ç–æ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ Wildberries, '
                f'—Å –ø–æ–º–æ—â—å—é –∫–æ—Ç–æ—Ä–æ–≥–æ –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–∫–∞–∑–∞—Ö, –ø—Ä–æ–¥–∞–∂–∞—Ö, –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è—Ö, –Ω–∞–ª–∏—á–∏—é –Ω–∞ '
                f'—Å–∫–ª–∞–¥–∞—Ö –∏ –¥—Ä—É–≥–∏–º –¥–∞–Ω–Ω—ã–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞, –±–µ–∑ –¥–æ—Å—Ç—É–ø–∞ –∫ –ª–∏—á–Ω–æ–º—É –∫–∞–±–∏–Ω–µ—Ç—É. '
                f'–î–∞–ª–µ–µ –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø–æ–ª—É—á–µ–Ω–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –º–æ–∂–Ω–æ —Å—Ç—Ä–æ–∏—Ç—å –∞–Ω–∞–ª–∏—Ç–∏–∫—É.\n',
                f'API-–∫–ª—é—á ‚Äî —ç—Ç–æ —Å–ø–æ—Å–æ–± –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–∏—è —Å —Ç–µ–º–∏ –∏–ª–∏ –∏–Ω—ã–º–∏ —Å–µ—Ä–≤–∏—Å–∞–º–∏ (–≤ —Ç–æ–º —á–∏—Å–ª–µ {hbold("WB Ninja Bot")}), '
                f'–∫–æ—Ç–æ—Ä—ã–µ —Å–æ–∑–¥–∞–Ω—ã –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø–æ–º–æ—á—å –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞–º –≤ —Ä–∞–±–æ—Ç–µ —Å Wildberries. \n',
                f'{hbold("–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ API:")}\n',
                f'‚ú¥Ô∏è –° –ø–æ–º–æ—â—å—é API –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ {hbold("–¥–µ—Ç–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—É—é")} –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º, –∑–∞–∫–∞–∑–∞–º –∏ –ø–æ—Å—Ç–∞–≤–∫–∞–º. '
                f'WB –∂–µ –≤ –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–µ —Å–≤–æ–∏—Ö –æ—Ç—á–µ—Ç–æ–≤ –¥–∞—ë—Ç –ª–∏—à—å –æ–±—â—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é. '
                f'‚ú¥Ô∏è API –±–µ–∑–æ–ø–∞—Å–µ–Ω –∏ –¥–∞—ë—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å {hbold("—Ç–æ–ª—å–∫–æ –ø–æ–ª—É—á–∞—Ç—å –¥–∞–Ω–Ω—ã–µ")}, —ç—Ç–æ –∑–Ω–∞—á–∏—Ç, —á—Ç–æ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–ª–∏ '
                f'–∫–∞–∫–æ–≥–æ-–ª–∏–±–æ –≤–ª–∏—è–Ω–∏—è –Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏—Å–∫–ª—é—á–µ–Ω–∞. \n',
                f'‚ú¥Ô∏è –í—ã –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç –º–æ–∂–µ—Ç–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –Ω–æ–≤—ã–π API-–∫–ª—é—á –≤ –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ WB, –∞ –∑–Ω–∞—á–∏—Ç {hbold("–æ—Ç–º–µ–Ω–∏—Ç—å –¥–æ—Å—Ç—É–ø")} –∫ '
                f'—Å—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏–º –¥–∞–Ω–Ω—ã–º –¥–ª—è –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞ –∏–ª–∏ –¥—Ä—É–≥–∏—Ö —Å–µ—Ä–≤–∏—Å–æ–≤.',

            ]
        ), reply_markup=back_to_connection
    )


@dp.callback_query_handler(text="back_connection", state=States.FREE_CONNECTING_API)
async def back_connection(call: CallbackQuery):
    await call.message.edit_text(
        "\n".join(
            [
                f'üõ† {hbold("–ü–û–î–ö–õ–Æ–ß–ï–ù–ò–ï")}\n',
                f'1Ô∏è‚É£ –ó–∞–π–¥–∏—Ç–µ –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç Wildberries ‚Üí –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚Üí –î–æ—Å—Ç—É–ø –∫ API ',
                f'{hlink("—Å—Å—ã–ª–∫–∞", "https://seller.wildberries.ru/supplier-settings/access-to-api")}\n',
                f'2Ô∏è‚É£ –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∫–ª—é—á –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å {hbold("API —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ x64")}(–µ—Å–ª–∏ –∫–ª—é—á–∞ –Ω–µ—Ç, —Å–æ–∑–¥–∞–π—Ç–µ –µ–≥–æ –∏ –ø–æ—Ç–æ–º —Å–∫–æ–ø–∏—Ä—É–π—Ç–µ).\n',
                f'3Ô∏è‚É£ –í—Å—Ç–∞–≤—å—Ç–µ –∫–ª—é—á –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ —ç—Ç–æ–≥–æ —á–∞—Ç–∞.\n',

            ]
        ), reply_markup=connection_keyboard
    )


@dp.message_handler(state=States.FREE_CONNECTING_API)
async def connection_api_x64(message: types.Message, state: FSMContext):
    status = await valid_token(message.text)
    support_keyboard = InlineKeyboardMarkup(row_width=1)
    support_button = InlineKeyboardButton(text="üë®üèª‚Äçüíª –ü–æ–¥–¥–µ—Ä–∂–∫–∞", url=SUPPORT_LINK)
    support_keyboard.insert(support_button)
    if status == 200:
        await state.finish()
        api_x64 = message.text
        seller = await select_seller_by_api_x64(api_x64)
        if seller:
            await update_user_seller(seller=seller, user_id=message.from_user.id)
        else:
            if await check_free_trail(message.chat.id, api_x64):
                seller = await add_seller(api_x64=api_x64, reserve=14, export=True, bot_enable=True,
                                          name=message.from_user.full_name, tarif=True)
                await update_user_seller(seller=seller, user_id=message.from_user.id)
                await first_scan(seller.id, seller.api_x64)
                await append_free_trail(message.from_user.id, seller.api_x64)
            else:
                seller = await add_seller(api_x64=api_x64, reserve=14, export=True, bot_enable=False,
                                          name=message.from_user.full_name, tarif=False)
                await update_user_seller(seller=seller, user_id=message.from_user.id)
                await update_trail_fail(seller_id=seller.id)
        await message.answer(
            "\n".join(
                [
                    f'üõ† {hbold(BOT_NAME)} —Ç–µ–ø–µ—Ä—å —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –≤–∞—Å ü§ú\n',
                    f'‚è≥ –ö–∞–∫ —Ç–æ–ª—å–∫–æ –Ω–∞ WB –ø–æ—è–≤–∏—Ç—Å—è –Ω–æ–≤—ã–π –∑–∞–∫–∞–∑, –±–æ—Ç —Å–æ–±–µ—Ä–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏ –ø—Ä–∏—à–ª–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ.\n',
                    f'üöô –ï—Å–ª–∏ –≤—ã —Ä–∞–±–æ—Ç–∞–µ—Ç–µ –ø–æ —Å—Ö–µ–º–µ {hbold("FBS")} (–ø—Ä–æ–¥–∞–∂–∞ —Å–æ —Å–∫–ª–∞–¥–∞ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞), –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π API-–∫–ª—é—á, '
                    f'—á—Ç–æ–±—ã –±–æ—Ç –º–æ–≥ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –Ω–æ–≤—ã–µ –∑–∞–∫–∞–∑—ã.\n',
                ]
            )
        )
    elif status == 400 or status == 500:
        await message.answer(
            "\n".join(
                [
                    f'‚ùå {hbold("–û—à–∏–±–∫–∞!!")}',
                    f'‚è± {datetime.datetime.now().time().strftime("%H:%M:%S")}\n',
                    f'API-–∫–ª—é—á (x64) –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω!\n',
                    f'–û—Ç–ø—Ä–∞–≤—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∫–ª—é—á –∑–∞–Ω–æ–≤–æ –≤ —ç—Ç–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏:',

                ]
            ), reply_markup=support_keyboard
        )
    else:
        await message.answer(
            "\n".join(
                [
                    f'üë§ {hbold("–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–¥–∞–≤—Ü–∞")}',
                    f'‚è± {datetime.datetime.now().time().strftime("%H:%M:%S")}\n',
                    f'‚ùå{hbold("–û—à–∏–±–∫–∞!")} –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é —Å–µ—Ä–≤–µ—Ä–∞ Wildberries –Ω–µ –æ—Ç–≤–µ—á–∞—é—Ç, '
                    f'–ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ!\n',

                ]
            ), reply_markup=support_keyboard
        )
